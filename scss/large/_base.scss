@import 'vars';
@import 'mixins';

// * Grid system
// * Define the size of the container using variables
// *

$wrap: ($col-width * $col-qty) + $gutter * ($col-qty - 1);

.container {
  margin: 0 auto;
  width: $wrap + $gutter;

  &:after {
    clear: both;
    content: '';
    display: block;
  }
}

@for $i from 2 through $col-qty {
    .col#{$i} > .container {
        margin: 0 0 0 -#{$gutter/2};
        width: ($col-width * $i) + ($gutter * $i);
    }
}

// * Generate a common style for all spans
%base-col {
  float: left;
  margin: 0 $gutter/2;
}

@mixin cols {
  @for $i from 1 through $col-qty {
    .col#{$i} { @extend %base-col; }
  }
}

// * Output the common span styles
@include cols;

// * Define widths for each span
.col#{$col-qty} {
  margin: 0 $gutter/2;
}

@for $i from 2 through $col-qty {
  .col#{$i} {
    width: ($col-width * $i) + ($gutter * $i) - $gutter;
  }
}

@for $i from 1 through ($col-qty - 2) {
  .pre#{$i} {
    margin-left: ($col-width * $i) + ($gutter * $i) + ($gutter / 2);
  }
}

@for $i from 1 through ($col-qty - 2) {
  .suf#{$i} {
    margin-right: ($col-width * $i) + ($gutter * $i);
  }
}

// * Additional grid utilities
.colr {
  float: right;
  margin: 0 $gutter/2;
}

.alpha {
  margin-left: 0;
}

.omega {
  margin-right: 0;
}

.clear {
  clear: both;
}

.center {
  float: none;
  margin: 0 auto;
}

// * Import section files
@import 'header';
@import 'home';

// * Extra large desktop
@media (min-width: $breakpoint-xl) {

  @import 'xl';

}
