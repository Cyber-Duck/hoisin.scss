// *
// * Grid system
// * Define the size of the container using extra large variables
// *
$wrap: $xl-col-width * 12 + $xl-gutter * 11;

// * Generate a common style for all spans
%base-xl-col {
  float: left;
  margin: 0 $xl-gutter/2;
}

@mixin cols {
  @for $i from 1 to $col-qty - 1 {
    .col#{$i} { @extend %base-xl-col; }
  }
}

// * Output the common span styles
@include cols;

// Define widths for each span
.col#{$col-qty} {
  margin: 0 $xl-gutter/2; // Full width, doesn't need float
  width: ($xl-col-width * $col-qty) + ($xl-gutter * $col-qty) - $xl-gutter;
}

@for $i from 2 to $col-qty {
  .col#{$i} {
    width: $xl-col-width * $i + $xl-gutter * $i - $xl-gutter;
  }
}

@for $i from 1 through 10 {
  .pre#{$i} {
    margin-left: ($xl-col-width * $i) + ($xl-gutter * $i) + ($xl-gutter / 2);
  }
}

@for $i from 1 through 10 {
  .suf#{$i} {
    margin-right: ($xl-col-width * $i) + ($xl-gutter * $i) + ($xl-gutter / 2);
  }
}

.container {
  width: $wrap + $xl-gutter;
}

@for $i from 2 through $col-qty {
    .col#{$i} > .container {
        margin: 0 0 0 -#{$xl-gutter/2};
        width: ($xl-col-width * $i) + ($xl-gutter * $i);
    }
}

// * Grid utilities
.colr {
  float: right;
  margin: 0 $xl-gutter/2;
}

.alpha {
  margin-left: 0;
}

.omega {
  margin-right: 0;
}

.clear {
  clear: both;
}

.center {
  float: none;
  margin: 0 auto;
}
