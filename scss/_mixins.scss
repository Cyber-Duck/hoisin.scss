///*
// * Hoisin.scss
// * Mixins library
// *
// * Vendor prefixes are handled by gulp-autoprefixer.
// * All prefixer mixins will be removed in future versions
// */


///* 
// * Respond to
// * @param $breakpoint (s | m | m-up | m-down | l | xl);
// *
// * @include respond-to(m) {
// *      property: value;
// * }
// */
@mixin respond-to($bp) {
    @if $bp == 's' {
        @media (max-width: $bp-m) {
            @content;
        }
    }
    @else if $bp == 'm' {
        @media (min-width: $bp-m) and (max-width: ($bp-l - 1)) {
            @content;
        }
    }
    @else if $bp == 'm-up' {
        @media (min-width: $bp-m) {
            @content;
        }
    }
    @else if $bp == 'm-down' {
        @media (max-width: ($bp-l - 1)) {
            @content;
        }
    }
    @else if $bp == 'l' {
        @media (min-width: $bp-l) {
            @content;
        }
    }
    @else if $bp == 'xl' {
        @media (min-width: $bp-xl) {
            @content;
        }
    }
}


///* 
// * Box shadow
// * @param $value ($h-offset $v-offset $blur $spread $color | inset | initial | inherit);
// *
// * @include box-shadow(2px 2px 2px 2px rgba(0,0,0,0.2));
// */
@mixin box-shadow($value: 0 0 4px 0 rgba(0, 0, 0, 0.5)) {
    @include prefixer(box-shadow, $value, webkit);
}


///* 
// * Two colors vertical linear gradient
// * @param $value ($initial-color);
// * @param $value ($final-color);
// *
// * @include gradients(#FF0, #F00);
// */
@mixin gradients($first, $second) {
    background-color: $first;
    background-image: linear-gradient(top, $first 0%, $second 100%);
}


///* 
// * Box model (defaults to border-box)
// * @param $type ($box-model);
// *
// * @include box-sizing;
// */
@mixin box-sizing($type: border-box) {
    @include prefixer(box-sizing, $type, moz webkit);
}


// *
// * Opacity (Old IE disabled by default)
// * @param $opac ($opacity);
// * @param $ie (true);
// *
// * @include opacity(0.7, true);
// */
@mixin opacity($opac, $ie: false) {
    @if $ie {
        filter: alpha(opacity=$opac * 100);
    }
    opacity: $opac;
}


///*
// * Transition (defaults to .15 sec)
// * @param $value ($speed | $property | $easing);
// *
// * @include transition(height 200ms ease-out);
// */
@mixin transition($value: 0.15s) {
    @include prefixer(transition, $value, webkit);
}


///* 
// * Rotate (Origin defaults to center of element)
// * @param $deg ($degrees);
// * @param $orig ($h-origin $v-origin);
// *
// * @include rotate(45deg);
// */
@mixin rotate($deg, $orig: 50% 50%) {
    @include prefixer(transform, rotate(#{$deg}), webkit ms);
    @if $orig != 50% and $orig != (50% 50%) and $orig != center and $orig != (center center) {
        @include prefixer(transform-origin, $orig, webkit ms);
    }
}


///*
// * Translate 
// * @param $hdist ($distance);
// * @param $vdist ($distance);
// *
// * @include translate(20px, 20px);
// */
@mixin translate($hdist: 0, $vdist: 0) {
    @include prefixer(transform, translate(#{$hdist}, #{$vdist}), webkit ms);
}


///* 
// * Animation (defaults to .15 sec)
// * @param $options ($animation-name $duration | $iteration);
// *
// * @include animation(myanimation 2s 3);
// */
@mixin animation($options) {
    @include prefixer(animation, $options);
}



///*
// * Placeholder text color
// * @param $color ($color);
// *
// * @include placeholder(#999);
// */
@mixin placeholder($color) {
    &::-webkit-input-placeholder {
        color: $color;
    }

    &::-moz-placeholder {
        color: $color; 
    }

    &::-ms-input-placeholder {
        color: $color;
    }
}


///*
// * Disallow user selection
// *
// * @include noselect;
// */
@mixin noselect {
    -webkit-touch-callout: none;
    @include prefixer(user-select, none, webkit ms);
}


///*
// * Prefixer
// * @param $property ($name);
// * @param $value ($value);
// * @param $prefixes (webkit | moz | ms | o);
// *
// * @include prefixer(animation, $options);
// */
@mixin prefixer($property, $value, $prefixes: webkit moz ms o) {
    @each $prefix in $prefixes {
        #{'-' + $prefix + '-' + $property}: #{$value};
    }
    #{$property}: #{$value};
}
